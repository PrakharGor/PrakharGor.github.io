{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["friendData","id","name","isFavourite","SearchPanel","setFilterData","className","type","placeholder","onChange","e","target","value","AddPanel","addFriends","onKeyPress","keyCode","which","FriendList","FriendListData","setFavourite","deleteFriend","favFriends","filter","item","normalFriends","map","FriendLIstSingle","ActionPanel","favClass","onClick","App","useState","setFriendListData","filterFlag","setFiletrFlag","filterListData","setFilterListData","useEffect","val","newFriend","length","Date","console","log","toLocaleLowerCase","currObj","indexOf","removeIndex","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.813ac38c.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './App.css';\n\nlet friendData = [\n    {\n        id: 1,\n        name: 'Rohit Sharma',\n        isFavourite: false\n    },\n    {\n        id: 2,\n        name: 'Shikhar Dhawan',\n        isFavourite: true\n    },\n    {\n        id: 3,\n        name: 'Virat Kohli',\n        isFavourite: false\n    },\n    {\n        id: 4,\n        name: 'Shreyas Iyer',\n        isFavourite: true\n    }, {\n        id: 5,\n        name: 'Rishabh Pant',\n        isFavourite: false\n    }, {\n        id: 6,\n        name: 'Hardik Pandya',\n        isFavourite: false\n    },\n]\nfunction App() {\n    const [FriendListData, setFriendListData] = useState(friendData);\n    const [filterFlag, setFiletrFlag] = useState(false);\n    const [filterListData, setFilterListData] = useState([]);\n    const setFavourite = id => {\n        let currObj = FriendListData.filter((item) => item.id == id);\n        currObj[0].isFavourite = ! currObj[0].isFavourite;\n        setFriendListData([...FriendListData]);\n    }\n    const deleteFriend = id => {\n        var removeIndex = FriendListData.map(function (item) {\n            return item.id;\n        }).indexOf(id);\n        FriendListData.splice(removeIndex, 1);\n        setFriendListData([...FriendListData]);\n    }\n\n    const setFilterData = name => {\n        if (name != '') {\n            name = name.toLocaleLowerCase();\n            let currObj = FriendListData.filter((item) => item.name.toLocaleLowerCase().indexOf(name) > -1);\n            // if (currObj && currObj.length > 0) {\n            setFilterListData(currObj)\n            setFiletrFlag(true)\n            // }\n        } else {\n            setFiletrFlag(false)\n        }\n    }\n\n    const addFriends = val => {\n        let newFriend = {\n            id: FriendListData.length + '_' + new Date(),\n            name: val,\n            isFavourite: false\n        }\n        setFriendListData([\n            ...FriendListData,\n            newFriend\n        ])\n        console.log(val)\n    }\n    useEffect(() => {}, [FriendListData])\n    return (\n        <div>\n            <div className='container'><AddPanel addFriends={\n                    (val) => addFriends(val)\n                }/></div>\n            <div className='container'>\n\n                <div className='panelTitle'>Friends List</div>\n                <SearchPanel setFilterData={\n                    (value) => setFilterData(value)\n                }/>\n                <FriendList FriendListData={\n                        filterFlag ? filterListData : FriendListData\n                    }\n                    setFavourite={\n                        (id) => setFavourite(id)\n                    }\n                    deleteFriend={\n                        (id) => deleteFriend(id)\n                    }/>\n            </div>\n        </div>\n    );\n}\n\n\nfunction SearchPanel({setFilterData}) {\n\n    return (\n        <div className='inputPanel'>\n            <input type='text' placeholder='Search here...'\n                onChange={\n                    (e) => setFilterData(e.target.value)\n                }/>\n        </div>\n    )\n}\n\nfunction AddPanel({addFriends}) {\n\n    return (\n        <div className='inputPanel'>\n            <input type='text' placeholder='Add Friend...'\n                onKeyPress={\n                    (e) => {\n\n                        var code = (e.keyCode ? e.keyCode : e.which);\n                        if (code == 13 && e.target.value != '') {\n                            addFriends(e.target.value)\n                            e.target.value = ''\n                        }\n                    }\n                }/>\n        </div>\n    )\n}\n\nfunction FriendList({FriendListData, setFavourite, deleteFriend}) {\n\n    let favFriends = FriendListData.filter((item) => item.isFavourite == true)\n    let normalFriends = FriendListData.filter((item) => item.isFavourite != true)\n    return (\n        <ul className='friendList'>\n            {\n            favFriends.map((item) => {\n                return <FriendLIstSingle item={item}\n                    setFavourite={\n                        (id) => setFavourite(id)\n                    }\n                    deleteFriend={\n                        (id) => {\n                            deleteFriend(id)\n                        }\n                    }/>\n\n            })\n        }\n            {\n            normalFriends.map((item) => {\n                return <FriendLIstSingle item={item}\n                    setFavourite={\n                        (id) => setFavourite(id)\n                    }\n                    deleteFriend={\n                        (id) => {\n                            deleteFriend(id)\n                        }\n                    }/>\n\n            })\n        } </ul>\n    )\n}\n\nfunction FriendLIstSingle({item, setFavourite, deleteFriend}) {\n    return (\n        <li>\n            <div className='friendLabel'>\n                {\n                item.name\n            } </div>\n            <ActionPanel isFavourite={\n                    item.isFavourite\n                }\n                id={\n                    item.id\n                }\n                setFavourite={\n                    () => setFavourite(item.id)\n                }\n                deleteFriend={\n                    () => deleteFriend(item.id)\n                }/>\n        </li>\n    )\n\n}\nfunction ActionPanel({isFavourite, id, setFavourite, deleteFriend}) {\n    let favClass = isFavourite ? '' : '-o';\n    return (\n        <div className='actionPanel'>\n            <span className={\n                    'fa starIcon fa-star' + favClass\n                }\n                onClick={\n                    () => setFavourite()\n            }></span>\n            <span className='fa fa-trash-o deleteIcon'\n                onClick={\n                    () => deleteFriend()\n            }></span>\n        </div>\n    )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}